name: Plan and Deploy Lambda and Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install
      working-directory: ./lambda

    - name: Zip Lambda function
      run: zip -j lambda_function.zip lambda/index.js
      working-directory: ./lambda

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: .

    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan -var 'api_key=${{ secrets.API_KEY }}'
      working-directory: .

    - name: Upload Plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event.inputs.approve == 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install
      working-directory: ./lambda

    - name: Zip Lambda function
      run: zip -j lambda_function.zip lambda/index.js
      working-directory: ./lambda

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Download Plan
      uses: actions/download-artifact@v2
      with:
        name: tfplan
        path: .

    - name: Terraform Apply
      run: terraform apply tfplan -var 'api_key=${{ secrets.API_KEY }}'
      working-directory: .
